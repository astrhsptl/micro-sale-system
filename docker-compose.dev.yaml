version: '3.9'
services:

  traefik:
    image: traefik:latest
    container_name: traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web"
      - "traefik.http.routers.traefik.service=traefik"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
      - "traefik.http.routers.traefik.rule=Host(`traefik.localhost`)"
    command: --api.insecure=true --providers.docker
    networks:
      - web

  redis:
    image: redis:latest
    restart: unless-stopped
    networks:
      - web
    ports:
      - "6379:6379"

  postgresql:
    image: postgres:15.0
    container_name: postgresql
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    restart: unless-stopped
    networks:
      - web
    ports:
      - "5432:5432"

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: root@root.com
      PGADMIN_DEFAULT_PASSWORD: root
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web"
      - "traefik.http.routers.pgadmin.service=pgadmin"
      - "traefik.http.routers.pgadmin.rule=Host(`pgadmin.localhost`)"
      - "traefik.http.services.pgadmin.loadbalancer.server.port=80"
    restart: unless-stopped
    networks:
      - web
    depends_on:
      - traefik
      - postgresql

volumes:
  media_volume:
  static_volume:
  postgres_data:

networks:
  web:
    external: true
